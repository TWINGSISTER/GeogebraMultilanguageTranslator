
/geogebra-math-apps-bundle-5-0-681-0/GeoGebra/deployggb.js
/GeogebraJS/GeoGebra/deployggb.js


# This   workflow will build a Java project with  Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle
# Copyrighted by TWINGSISTEER under Attribution-NonCommercial-ShareAlike 3.0 Unported (CC BY-NC-SA 3.0) 2021

name:  Java CI with Gradle

on:
  push:
    branches: [ master ]
#    paths:
#      - 'release-versions/*'

  pull_request:
    branches: [ master ]
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 0 1 * *'
env:
  CPY: './copydir'

jobs:

  build:
  
    runs-on: ubuntu-latest
    steps:
    - name: get tag
      id: ggb  # The step ID to refer to later.
      uses: oprypin/find-latest-tag@v1
      with:
        repository: geogebra/geogebra  # The repository to scan.
    - name: Fetch tag for latest release version
      id: lastrelease
      run: |
        curl -sL https://api.github.com/repos/TWINGSISTER/Geogebra-Javascript-Bundle/releases/latest | \
          jq -r ".tag_name"> releasetag
          cat releasetag > releasename
          sed -i 's/\./-/g' releasename 
        echo ::set-output name=TAGNAME::$(cat releasetag)
        echo "::debug::{$TAGNAME}"
        echo ::set-output name=TAGFILE::$(cat releasename)
        echo "::debug::{$TAGFILE}"
    - name: relname #
      id: relno #
      uses: mad9000/actions-find-and-replace-string@2
        with:
        source: ${{ steps.ggb.outputs.tag }} #  be any arbitrary string 
        find: '.'        # we want to remove ref/heads/ from source 
        replace: '_'               # and replace it with a blank string (ie. removing it)
        echo "::debug::steps.relno.value"
   - name: bail out?
      if:  steps.lastrelease.outputs.TAGNAME == steps.ggb.outputs.tag 
      run: exit 1
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d-%H-%M-%S')"
    - name: get orig
      uses: actions/checkout@v2
      with :
        repository: geogebra/geogebra
        ref: master
        path: ${{env.CPY}}
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          tag_name: "${{ steps.ggb.outputs.tag }}" # ${{ github.ref }}
          release_name: "${{ steps.ggb.outputs.tag }}" #Release ${{ github.ref }}
          draft: false
          prerelease: false
    - name: Grant execute permission for gradlew
      run: chmod +x ${{env.CPY}}/gradlew
############################################################### Original          
    - name: Build with   Gradle Original
      run: |
        cd ${{env.CPY}} 
        # sed -i 's/org.wisepersist.gradle.plugins.gwt.Style.DETAILED/org.wisepersist.gradle.plugins.gwt.Style.PRETTY \n disableClassMetadata = true/' ./web/build.gradle
        # cat ./web/build.gradle
        ./gradlew :web:prepareS3Upload :web:createDraftBundleZip :web:mergeDeploy -Pgdraft=true #-Pgdetailed=true 
        # sed -i 's/org.wisepersist.gradle.plugins.gwt.Style.DETAILED/org.wisepersist.gradle.plugins.gwt.Style.PRETTY/' ./web/build.gradle
    - name: Build structure
      run: |
        mkdir -p zip-bundle-orig
        mkdir -p zip-bundle-orig/GeoGebra
        mkdir -p zip-bundle-orig/GeoGebra/HTML5
        mkdir -p zip-bundle-orig/GeoGebra/HTML5/5.0
        unzip  -d ./zip-bundle-orig ${{env.CPY}}/web/war/geogebra-bundle.zip 
    - name: get this repo
      uses: actions/checkout@v2
      with :
        ref: master
        path: ${{env.CPY}}/this
    - name: copy the files for the bundle ORIG  
      run: |
        cp -r ${{env.CPY}}/web/war/deployggb.js  ./zip-bundle-orig/GeoGebra
        cp -r ${{env.CPY}}/this/index.html ./zip-bundle-orig
        cp -r ${{env.CPY}}/web/build/gwt/out/webSimple ./zip-bundle-orig/GeoGebra/HTML5/5.0
        cp -r ${{env.CPY}}/web/build/gwt/out/web3d ./zip-bundle-orig/GeoGebra/HTML5/5.0
        cp -r ${{env.CPY}}/web/build/gwt/out/web ./zip-bundle-orig/GeoGebra/HTML5/5.0
        cp -r ${{env.CPY}}/web/war/deployggb-*.js  ./zip-bundle-orig/GeoGebra
        # cp -r ${{env.CPY}}/web/war/web ./zip-bundle-orig/GeoGebra/HTML5/5.0
        # cp -r ${{env.CPY}}/web/war/webSimple ./zip-bundle-orig/GeoGebra/HTML5/5.0
        # cp ${{env.CPY}}/web/war/*.*  zip-bundle-obf/GeoGebra/HTML5/5.0
    #- name: Setup tmate sessions
    #  uses: mxschmitt/action-tmate@v3   

    - name: zipping
      uses: thedoctor0/zip-release@master
      with:
            filename: 'release-orig-${{ steps.date.outputs.date }}.zip'
            directory: ./zip-bundle-orig
    - name: Upload Release Asset Orig
      #id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./zip-bundle-orig/release-orig-${{ steps.date.outputs.date }}.zip
          # asset_name: somename${{ steps.date.outputs.date }}.zip
          # asset_name: geogebra-math-apps-bundle-${{ steps.lastrelease.outputs.TAGFILE }}.zip
          asset_name: geogebra-math-apps-bundle-${{ steps.relno.value }}.zip
          asset_content_type: application/zip
